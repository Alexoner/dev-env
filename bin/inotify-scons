#!/bin/bash

#script -q -c 'scons -uj`nproc` --with-caffe-gpu caffe_train=1 --with-opencv-version=3.2 --with-use-opencv-gpu-mat --with-gpu-cuda-version=cuda8 --with-tf-gpu --interactive' &

#$PID=`ps aux|grep $USER |grep scons |grep -v grep |awk '{print $2}'`

FILE=$1
PID=$2


program_exists() {
    local ret='0'
    command -v "$1" >/dev/null 2>&1 || { local ret='1'; }

    # fail on non-zero return value
    if [ "$ret" -ne 0 ]; then
        return 1
    fi

    return 0
}

if ! program_exists inotifywait
then
	echo "inotifywait needs to be installed first"
	mkdir -p /tmp && cd /tmp
	curl -LO "http://github.com/downloads/rvoicilas/inotify-tools/inotify-tools-3.14.tar.gz"
	tar xfv inotify-tools-3.14.tar.gz
	cd inotify-tools-3.14
	./configure --prefix=$HOME/
	make install
	INOTIFYWAIT=$USER/bin/inotifywait
else 
	INOTIFYWAIT=inotifywait
fi

DATE=`date +%Y%m%d`
NAME=/tmp/$DATE.pipe
# XXX: make first in first out pipe file
mkfifo $NAME

cat-pipe() {
	while true
	do
		cat "$1"
	done
}

cat-pipe $NAME| scons -uj`nproc` --with-caffe-gpu caffe_train=1 --with-opencv-version=3.2 --with-use-opencv-gpu-mat --with-gpu-cuda-version=cuda8 --with-tf-gpu --interactive &


TIMESTAMP_LAST=0
# use inotifywait -m to loop
#$INOTIFYWAIT -mre modify,create,delete,move "$FILE" | while read path event file
$INOTIFYWAIT -mre modify "$FILE" | while read path event file
do
	if [[ "$file" =~ .*\.(h|c|cpp|cu) ]]
	then
		echo "event: " $path $event $file
		#echo "?" >> $NAME
		TIMESTAMP=`date +%s`
		INTERVAL=$(($TIMESTAMP - $TIMESTAMP_LAST))
		echo "time elapsed since last time build: $INTERVAL"
		if [ $INTERVAL -gt 15 ]
		then
			echo "build $1" >> $NAME
			TIMESTAMP_LAST=$TIMESTAMP
		fi

		#echo <<EOF  >> /proc/$PID/fd/0
			#build $1
#EOF
	fi
done

# use while to loop
#while $INOTIFYWAIT -re modify "$FILE"
#do
	#if [[ "$EVENT" =~ ".*\.(h|c|cpp|cu)" ]]
	#then
		#echo "event: $EVENT" |tee -a /dev/null
		#echo "build $1\n" |tee -a /proc/$PID/fd/0
		##echo "build $1\n" >> /proc/$PID/fd/0
		##ssh -t ficusromania 'bash -s' <<EOF
		##echo "build $1" >> /proc/$PID/fd/0
##EOF
	#fi
#done
